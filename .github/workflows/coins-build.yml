# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go
name: build app

on:
  push:
    paths:
      - '**/*'  # only debug
#      - binance-smart-chain/version.txt
#      - binance-smart-chain/dockerfile.ci


jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        coin_folder: ['binance-smart-chain']

    env:  # set global vas
#      DOCKER_REPO: tonstakers/ton-proxy
      DOCKER_FILE: dockerfile.ci
      UBUNTU_IMAGE_VERSION: "24.04"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract version
        id: vars
        run: |
          cd ${{ matrix.coin_folder }}
          echo "VERSION=$(cat version.txt)"
          echo "VERSION=$(cat version.txt)" >> $GITHUB_ENV
          echo "TIMESTAMP=$(date -u +%Y%m%d%H%M%S)" >> $GITHUB_ENV

      - name: Define folders and variables
        id: define_folders
        shell: bash
        run: |
          declare -A folder_variable_map
          folder_variable_map[binance-smart-chain]="denisitpro/coin-bsc"
          folder_variable_map[solana]="denisitpro/coin-solana"
          
          for folder in "${!folder_variable_map[@]}"; do
            if git diff --name-only HEAD^ HEAD | grep -q "^$folder/"; then
              echo "DOCKER_REPO=${folder_variable_map[$folder]}" >> $GITHUB_ENV
              break
            fi
          done

      - name: Print the variable
        run: echo "The DOCKER_REPO is $DOCKER_REPO"

#
#      - name: Login to Docker Hub
#        uses: docker/login-action@v3
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}
#
#      - name: Build and push
#        uses: docker/build-push-action@v6
#        with:
#          context: ./${{ matrix.coin_folder }}
#          file: ./${{ matrix.coin_folder }}/dockerfile.ci
#          push: true
#          tags: |
#            ${{ env.DOCKER_REPO }}:${{ env.VERSION }}
#            ${{ env.DOCKER_REPO }}:latest
#          build-args: |
#            TIMESTAMP=${{ env.TIMESTAMP }}
#            VERSION=${{ env.VERSION }}
#            UBUNTU_IMAGE_VERSION=${{ env.UBUNTU_IMAGE_VERSION }}
